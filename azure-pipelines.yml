trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:

# 1) Build Stage: genera /dist y lo empaqueta en ZIP
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Install & Build'
    steps:
      - checkout: self

      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Use Node.js 20.x'

      - script: |
          npm install
          npm run build --if-present
        displayName: 'npm install & build'

      - task: ArchiveFiles@2
        displayName: 'Zip de assets estáticos'
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
          includeRootFolder: false
          archiveType: zip
          archiveFile: '$(Build.ArtifactStagingDirectory)/release.zip'
          replaceExistingArchive: true

      - publish: $(Build.ArtifactStagingDirectory)/release.zip
        artifact: drop

# 2) Deploy Stage: sube el ZIP con Azure CLI (sin Oryx)
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: 'Deploy estático con Azure CLI'
    steps:
      - download: current
        artifact: drop

      - task: AzureCLI@2
        displayName: 'Deploy estático con CLI'
        inputs:
          azureSubscription: 'SC-CasinoDemo'      # tu Service Connection
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az webapp deployment source config-zip \
              --resource-group REACT-WEU-DEV    \
              --name reactcasinodemo            \
              --src $(Build.ArtifactStagingDirectory)/release.zip
