trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:
# 1) Build: generar dist
- stage: Build
  jobs:
  - job: Build
    steps:
      - checkout: self
      - task: NodeTool@0
        inputs: { versionSpec: '20.x' }
      - script: |
          npm install
          npm run build --if-present
        displayName: 'npm install & build'
      # 1.1 Prepara carpeta “package” con dist + server.js + package.json
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
            dist/**
            server.js
            package.json
          TargetFolder: '$(Build.ArtifactStagingDirectory)/package'
      # 1.2 Zippea esa carpeta completa
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/package'
          includeRootFolder: false
          archiveType: zip
          archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
          replaceExistingArchive: true
      - publish: $(Build.ArtifactStagingDirectory)/app.zip
        artifact: drop

# 2) Deploy: usa AzureWebApp@1
- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    steps:
      - download: current
        artifact: drop
      - task: AzureWebApp@1
        displayName: 'Deploy con Kudu (incluye server.js)'
        inputs:
          azureSubscription: 'SC-CasinoDemo'
          appType: 'webAppLinux'
          appName: 'reactcasinodemo'
          package: '$(Pipeline.Workspace)/drop/app.zip'
